[{"id":0,"href":"/docs/cloud-init-config/","title":"cloud-init config","section":"Docs","content":" Scope # This page list the various cloud-init config file I\u0026rsquo;m using when creating a new server. Unless specified, I\u0026rsquo;m working with a Debian Bookworm install, on an ARM CPU, using Hetzner as a cloud provider.\nYou can also check cloud-init official site and cloud config examples.\nMinimal cloud-init config # This minimal config files sets up a user, gives it sudo privileges, sets up fail2ban and prevent SSH for root and without a SSH key.\nReplace the content of the highlighted lines as specified.\n#cloud-config timezone: YOUR_TIMEZONE eg. Europe/London users: - name: YOUR_USERNAME passwd: OUTPUT_FROM mkpasswd -m sha-512 ssh_authorized_keys: - YOUR_PUBLIC_KEY groups: sudo shell: /bin/bash lock_passwd: false packages: - fail2ban - python3-systemd package_update: true package_upgrade: true write_files: - content: | [sshd] backend = systemd enabled = true banaction = iptables-multiport path: /etc/fail2ban/jail.local runcmd: - service fail2ban enable - sed -i -r \u0026#39;s/^#?PermitRootLogin.*$/PermitRootLogin no/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?PasswordAuthentication.*$/PasswordAuthentication no/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?PermitEmptyPasswords.*$/PermitEmptyPasswords no/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?PubkeyAuthentication.*$/PubkeyAuthentication yes/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?StrictModes.*$/StrictModes yes/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?MaxAuthTries.*$/MaxAuthTries 2/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?StrictModes.*$/StrictModes yes/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?UsePAM.*$/UsePAM no/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?X11Forwarding.*$/X11Forwarding no/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?AllowAgentForwarding.*$/AllowAgentForwarding no/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?AllowTcpForwarding.*$/AllowTcpForwarding no/\u0026#39; /etc/ssh/sshd_config # Uncomment to only allow SSH for one or several users (space-separated) # For Bob and Alice the line would be - sed -i \u0026#39;$a AllowUsers Bob Alice\u0026#39; /etc/ssh/sshd_config # - sed -i \u0026#39;$a AllowUsers USERNAME(S)\u0026#39; /etc/ssh/sshd_config - reboot Minimal cloud-init config with docker # Basically the same as the minimal script, but a few lines are added in the runcmd section to add the docker repository and install docker.\nReplace the content of the highlighted lines as specified.\n#cloud-config timezone: YOUR_TIMEZONE eg. Europe/London users: - name: YOUR_USERNAME passwd: OUTPUT_FROM mkpasswd -m sha-512 ssh_authorized_keys: - YOUR_PUBLIC_KEY groups: sudo shell: /bin/bash lock_passwd: false packages: - fail2ban - python3-systemd package_update: true package_upgrade: true write_files: - content: | [sshd] backend = systemd enabled = true banaction = iptables-multiport path: /etc/fail2ban/jail.local runcmd: - service fail2ban enable - sed -i -r \u0026#39;s/^#?PermitRootLogin.*$/PermitRootLogin no/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?PasswordAuthentication.*$/PasswordAuthentication no/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?PermitEmptyPasswords.*$/PermitEmptyPasswords no/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?PubkeyAuthentication.*$/PubkeyAuthentication yes/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?StrictModes.*$/StrictModes yes/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?MaxAuthTries.*$/MaxAuthTries 2/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?StrictModes.*$/StrictModes yes/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?UsePAM.*$/UsePAM no/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?X11Forwarding.*$/X11Forwarding no/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?AllowAgentForwarding.*$/AllowAgentForwarding no/\u0026#39; /etc/ssh/sshd_config - sed -i -r \u0026#39;s/^#?AllowTcpForwarding.*$/AllowTcpForwarding no/\u0026#39; /etc/ssh/sshd_config # Uncomment to only allow SSH for one or several users (space-separated) # For Bob and Alice the line would be - sed -i \u0026#39;$a AllowUsers Bob Alice\u0026#39; /etc/ssh/sshd_config # - sed -i \u0026#39;$a AllowUsers USERNAME(S)\u0026#39; /etc/ssh/sshd_config - install -m 0755 -d /etc/apt/keyrings - curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc - chmod a+r /etc/apt/keyrings/docker.asc - echo \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release \u0026amp;\u0026amp; echo \u0026#34;$VERSION_CODENAME\u0026#34;) stable\u0026#34; | tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null - apt update - apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin - reboot "},{"id":1,"href":"/docs/docker-server/","title":"Docker Server","section":"Docs","content":" Docker server # This section covers the deployement of a standardized portainer instance, using Caddy as reverse proxy. The root system is the docker-enabled debian.\nLaunch portainer # Enter the following command :\nsudo docker run -d -p 9443:9443 --name portainer --restart=always \\ -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data \\ --network=YOUR_NETWORK -l caddy=YOUR_DOMAIN \\ -l \u0026#34;caddy.reverse_proxy={{upstreams 9000}}\u0026#34; \\ -l caddy.tls=internal portainer/portainer-ce:sts Minimal caddy script # Using caddy-docker-proxy which allows for the generation of the caddyfile on the fly by settings labels on the target docking machine\n"},{"id":2,"href":"/docs/hacks/","title":"Hacks","section":"Docs","content":" Hacks # This sections covers a bit of everything, each time I had to go off the beaten track to do stuff.\nSet default path in rclone # Usually, I set up rclone to use SFTP. It works, but always ask for the path to destination folder, with no way to set a default path. A solution is to add an alias to your config file (default path ~/.config/rclone/rclone.conf), as shown hereunder.\n[rclone_sftp] type = sftp host = docs.kntc.be user = YOUR_SSH_USER pass = HASHED_SSH_PASSWORD shell_type = unix md5sum_command = md5sum sha1sum_command = sha1sum [docs.kntc.be] type = alias remote = rclone_sftp:DEFAULT/PATH/ Don\u0026rsquo;t forget to edit the highlighted lines.\n"},{"id":3,"href":"/docs/hugo-cheat-sheet/","title":"Hugo cheat sheet","section":"Docs","content":" Create new page # I\u0026rsquo;m using the Hugo Book Theme, which means it will render the content of the content in the content/docs folder as a book.\nSo the creation of a new page go as such :\nhugo new content content/docs/my-new-page.md Serve locally # Simply use hugo serve --disableFastRender. The disableFastRender option is there to ensure proper site construction, when you add page, for example.\nPublish website # I\u0026rsquo;m using rclone, which is set with a SFTP remote named docs.kntc.be. Enter the following commands :\nhugo --gc --minify rclone sync --interactive public/ docs.kntc.be: The --interactive can be omitted if you simply want to push to prod and erase everything already present. So, as I\u0026rsquo;m copy-pasting these commands, this becomes :\nrclone sync public/ docs.kntc.be: Syntax highlighting # For specific langages, such as YAML, I use syntax highlighting and the emacs style.\nThus, for YAML the header is ```yml {style=emacs}. To highligh specific lines, add hl_lines=[2,\u0026quot;4-7\u0026quot;] between the braces, and to add line numbering linenos=inline.\nHere\u0026rsquo;s the list of supported langages - note, for plaintext you can use either text or ucode.\n"},{"id":4,"href":"/docs/links/","title":"Links","section":"Docs","content":" Useful links # This is an amalgamation of the websites I use regularly :\nDNS Checker : Useful to check if the new subdomain you\u0026rsquo;ve just created/modified is live. Qualys SSL Checker : Check the quality of your SSL deployment. "}]